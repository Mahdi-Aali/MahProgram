@using MahProgram.DTOs.Models.ProjectModel;
@using MahProgram.DataAccess.Repositories.ProjectRepository;
@using MahProgram.Utilities.FileManagment;
@using MahProgram.DataAccess.Models.ProjectModel;
@page "/Admin/Projects/AddProject"
@inherits OwningComponentBase<IProjectRepository>

<a class="btn btn-primary" @onclick="@(() => navigationManager?.NavigateTo("/Admin"))">
    <i class="icon-arrow-left"></i>
</a>

<div class="row">
    <div class="col-sm-12">
        <div class="card">
            <div class="card-header">
                <div class="card-title-wrap bar-success">
                    <h4 class="card-title">افزودن عضو</h4>
                </div>
            </div>
            <div class="card-body">
                <div class="card-block">
                    <EditForm Model="CreateProject" OnValidSubmit="SubmitAsync">
                        <DataAnnotationsValidator />
                        <div class="input-group">
                            <label class="form-label">نام</label>
                            <InputText class="form-control border-primary" @bind-Value="CreateProject.Name" />
                        </div>
                        <div class="input-group">
                            <label class="form-label">توضیحات @CreateProject.Description.Length</label>
                            <InputTextArea class="form-control border-primary" cols="12" rows="12" @bind-Value="CreateProject.Description"></InputTextArea>
                        </div>
                        <div class="input-group">
                            <label class="form-label">آیکن پروژه</label>
                            @if (!string.IsNullOrEmpty(CreateProject.Icon?.Name))
                            {
                                <p>@CreateProject.Icon.Name</p>
                            }
                            <div class="custom-file">
                                <InputFile OnChange="@(e => CreateProject.Icon = e.File)" type="file" accept=".jpg,.jpeg,.png" class="custom-file-input" id="inputGroupFile01" />
                                <label class="custom-file-label">انتخاب فایل</label>
                            </div>
                        </div>

                        <div class="input-group">
                            <label class="form-label">تصویر اول پروژه</label>
                            @if (!string.IsNullOrEmpty(CreateProject.MockUpImageOne?.Name))
                            {
                                <p>@CreateProject.MockUpImageOne.Name</p>
                            }
                            <div class="custom-file">
                                <InputFile OnChange="@(e => CreateProject.MockUpImageOne = e.File)" type="file" accept=".jpg,.jpeg,.png" class="custom-file-input" id="inputGroupFile01" />
                                <label class="custom-file-label">انتخاب فایل</label>
                            </div>
                        </div>

                        <div class="input-group">
                            <label class="form-label">تصویر دوم پروژه</label>
                            @if (!string.IsNullOrEmpty(CreateProject.MockUpImageTwo?.Name))
                            {
                                <p>@CreateProject.MockUpImageTwo.Name</p>
                            }
                            <div class="custom-file">
                                <InputFile OnChange="@(e => CreateProject.MockUpImageTwo = e.File)" type="file" accept=".jpg,.jpeg,.png" class="custom-file-input" id="inputGroupFile01" />
                                <label class="custom-file-label">انتخاب فایل</label>
                            </div>
                        </div>

                        <div class="input-group">
                            <label class="form-label">تصویر سوم پروژه</label>
                            @if (!string.IsNullOrEmpty(CreateProject.MockUpImageThree?.Name))
                            {
                                <p>@CreateProject.MockUpImageThree.Name</p>
                            }
                            <div class="custom-file">
                                <InputFile OnChange="@(e => CreateProject.MockUpImageThree = e.File)" type="file" accept=".jpg,.jpeg,.png" class="custom-file-input" id="inputGroupFile01" />
                                <label class="custom-file-label">انتخاب فایل</label>
                            </div>
                        </div>

                        <div class="input-group">
                            <label class="form-label">تصویر چهارم پروژه</label>
                            @if (!string.IsNullOrEmpty(CreateProject.MockUpImageFour?.Name))
                            {
                                <p>@CreateProject.MockUpImageFour.Name</p>
                            }
                            <div class="custom-file">
                                <InputFile OnChange="@(e => CreateProject.MockUpImageFour = e.File)" type="file" accept=".jpg,.jpeg,.png" class="custom-file-input" id="inputGroupFile01" />
                                <label class="custom-file-label">انتخاب فایل</label>
                            </div>
                        </div>

                        <ValidationMessage For="@(() => CreateProject.Name)" />
                        <ValidationMessage For="@(() => CreateProject.Description)" />
                        <ValidationMessage For="@(() => CreateProject.Icon)" />
                        <ValidationMessage For="@(() => CreateProject.MockUpImageOne)" />
                        <ValidationMessage For="@(() => CreateProject.MockUpImageTwo)" />
                        <ValidationMessage For="@(() => CreateProject.MockUpImageThree)" />
                        <ValidationMessage For="@(() => CreateProject.MockUpImageFour)" />

                        
                        @if (hasError)
                        {
                            <div class="alert alert-danger text-white">
                                مشگلی پیش آمده. لطفا فایل log را برسی کنید
                            </div>
                        }
                        <div class="input-group">
                            <button type="submit" class="btn btn-success">
                                <i class="icon-plus"></i> ثبت عضو
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Inject]
    private NavigationManager? navigationManager { get; set; }

    public CreateProjectViewModel CreateProject { get; set; } = new();

    private IProjectRepository repository => ScopedServices.CreateScope().ServiceProvider.GetRequiredService<IProjectRepository>();

    private bool hasError = false;

    public async Task SubmitAsync()
    {
        string iconName = $"{Guid.NewGuid()}{Path.GetExtension(CreateProject.Icon.Name)}";
        string mockUpImageOneName = $"{Guid.NewGuid()}{Path.GetExtension(CreateProject.MockUpImageOne.Name)}";
        string mockUpImageTwoName = $"{Guid.NewGuid()}{Path.GetExtension(CreateProject.MockUpImageTwo.Name)}";
        string mockUpImageThreeName = $"{Guid.NewGuid()}{Path.GetExtension(CreateProject.MockUpImageThree.Name)}";
        string mockUpImageFourName = $"{Guid.NewGuid()}{Path.GetExtension(CreateProject.MockUpImageFour.Name)}";

        string savePath = Path.Combine(Directory.GetCurrentDirectory(), "Images", "ProjectImage");
        await FileSaver.SaveFileAsync(CreateProject.Icon, Path.Combine(savePath, iconName));
        await FileSaver.SaveFileAsync(CreateProject.MockUpImageOne, Path.Combine(savePath, mockUpImageOneName));
        await FileSaver.SaveFileAsync(CreateProject.MockUpImageTwo, Path.Combine(savePath, mockUpImageTwoName));
        await FileSaver.SaveFileAsync(CreateProject.MockUpImageThree, Path.Combine(savePath, mockUpImageThreeName));
        await FileSaver.SaveFileAsync(CreateProject.MockUpImageFour, Path.Combine(savePath, mockUpImageFourName));

        Project project = CreateProject.ToProject(iconName, mockUpImageOneName, mockUpImageTwoName, mockUpImageThreeName, mockUpImageFourName);

        hasError = !await repository.AddAsync(project);

        if (!hasError)
        {
            navigationManager?.NavigateTo("/Admin/Projects");
        }
    }
}
