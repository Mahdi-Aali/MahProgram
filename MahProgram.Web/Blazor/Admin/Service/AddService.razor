@page "/Admin/Services/AddService"
@using MahProgram.Common.ModelConvertorExtensions;
@using MahProgram.DTOs.Models.ServiceModels;
@using MahProgram.Utilities.FileManagment;
<a class="btn btn-primary" @onclick="@(() => navigationManager?.NavigateTo("/Admin/Services"))">
    <i class="icon-arrow-left"></i>
</a>

<div class="row">
    <div class="col-sm-12">
        <div class="card">
            <div class="card-header">
                <div class="card-title-wrap bar-success">
                    <h4 class="card-title">افزودن سرویس</h4>
                </div>
            </div>
            <div class="card-body">
                <div class="card-block">
                    <EditForm Model="CreateServiceViewModel" OnValidSubmit="SubmitAsync">
                        <DataAnnotationsValidator />
                        <div class="input-group">
                            <label class="form-label">عنوان سرویس</label>
                            <InputText class="form-control border-primary" @bind-Value="CreateServiceViewModel.Name" />
                        </div>
                        <div class="input-group">
                            <label class="form-label">توضیحات سرویس</label>
                            <InputTextArea class="form-control border-primary" cols="12" rows="12" @bind-Value="CreateServiceViewModel.Description"></InputTextArea>
                        </div>
                        <div class="input-group">
                            <label class="form-label">آیکون</label>
                            <InputText class="form-control border-primary" @bind-Value="@CreateServiceViewModel.Icon"/>
                        </div>
                        <div class="input-group">
                            <label class="form-label">تصویر سرویس</label>
                            @if (!string.IsNullOrEmpty(CreateServiceViewModel.ImagePath?.Name))
                            {
                                <p>@CreateServiceViewModel.ImagePath.Name</p>
                            }
                            <div class="custom-file">
                                <InputFile OnChange="@(e => CreateServiceViewModel.ImagePath = e.File)" type="file" accept=".jpg,.jpeg,.png" class="custom-file-input" id="inputGroupFile01" />
                                <label class="custom-file-label">انتخاب فایل</label>
                            </div>
                        </div>
                        <ValidationMessage For="@(() => CreateServiceViewModel.Name)" />
                        <ValidationMessage For="@(() => CreateServiceViewModel.Description)" />
                        <ValidationMessage For="@(() => CreateServiceViewModel.Icon)" />
                        <ValidationMessage For="@(() => CreateServiceViewModel.ImagePath)" />
                        @if (hasError)
                        {
                            <div class="alert alert-danger text-white">
                                مشگلی پیش آمده. لطفا فایل log را برسی کنید
                            </div>
                        }
                        <div class="input-group">
                            <button type="submit" class="btn btn-success">
                                <i class="icon-plus"></i> ثبت سرویس
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Inject]
    private NavigationManager? navigationManager { get; set; }

    [Inject]
    private IServiceRepository? serviceRepository { get; set; }

    public CreateServiceViewModel CreateServiceViewModel { get; set; } = new();

    private bool hasError = false;

    private async Task SubmitAsync()
    {
        string imageName = $"{Guid.NewGuid()}{Path.GetExtension(CreateServiceViewModel.ImagePath.Name)}";
        string imagePath = Path.Combine(Directory.GetCurrentDirectory(), "Images", "ServiceImage", imageName);
        await FileSaver.SaveFileAsync(CreateServiceViewModel.ImagePath, imagePath);
        Service service = CreateServiceViewModel.ToService(imageName);
        if (await serviceRepository?.AddAsync(service)!)
        {
            navigationManager?.NavigateTo("/Admin/Services");
        }
        else
        {
            hasError = true;
        }
    }
}
